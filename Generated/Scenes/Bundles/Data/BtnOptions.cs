// This file is automatically generated by Kumquat.
// Do not modify this file - YOUR CHANGES WILL BE ERASED!

using Lime;

namespace Game.Scenes.Data;
public class BtnOptions : BtnOptions<Lime.Frame>
{
	public const string AssetPath = "Shell/Externals/BtnOptions";

	public static readonly Lime.Frame FrameCache = (Lime.Frame)Node.Load(AssetPath);

	public BtnOptions() : base(FrameCache.Clone<Node>()) { }

	public BtnOptions(Node node) : base(node) { }

	public new BtnOptions Clone()
	{
		return new BtnOptions(It.Clone<Node>());
	}
}

public class BtnOptions<T> : ParsedNode where T : Node
{
	public T It => (T)Node;



	public BtnOptions() : this(BtnOptions.FrameCache.Clone<Node>()) { }

	public BtnOptions(Node node)
	{
		Node = node;
	}

	public BtnOptions<T> Clone()
	{
		return new BtnOptions<T>(It.Clone<Node>());
	}

	public T RunAnimationInit()
	{
		Node.RunAnimation("Init");
		return (T)Node;
	}
	public T RunAnimationNormal()
	{
		Node.RunAnimation("Normal");
		return (T)Node;
	}
	public T RunAnimationFocus()
	{
		Node.RunAnimation("Focus");
		return (T)Node;
	}
	public T RunAnimationPress()
	{
		Node.RunAnimation("Press");
		return (T)Node;
	}
	public T RunAnimationRelease()
	{
		Node.RunAnimation("Release");
		return (T)Node;
	}
	public T RunAnimationDisable()
	{
		Node.RunAnimation("Disable");
		return (T)Node;
	}
}
