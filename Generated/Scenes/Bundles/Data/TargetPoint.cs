// This file is automatically generated by Kumquat.
// Do not modify this file - YOUR CHANGES WILL BE ERASED!

using Lime;

namespace Game.Scenes.Data;
public class TargetPoint : TargetPoint<Lime.Frame>
{
	public const string AssetPath = "Shell/TargetPoint";

	public static readonly Lime.Frame FrameCache = (Lime.Frame)Node.Load(AssetPath);

	public TargetPoint() : base(FrameCache.Clone<Node>()) { }

	public TargetPoint(Node node) : base(node) { }

	public new TargetPoint Clone()
	{
		return new TargetPoint(It.Clone<Node>());
	}
}

public class TargetPoint<T> : ParsedNode where T : Node
{
	public T It => (T)Node;



	public TargetPoint() : this(TargetPoint.FrameCache.Clone<Node>()) { }

	public TargetPoint(Node node)
	{
		Node = node;
	}

	public TargetPoint<T> Clone()
	{
		return new TargetPoint<T>(It.Clone<Node>());
	}

	public T RunAnimationInit()
	{
		Node.RunAnimation("Init");
		return (T)Node;
	}
	public T RunAnimationReplay()
	{
		Node.RunAnimation("Replay");
		return (T)Node;
	}
}
