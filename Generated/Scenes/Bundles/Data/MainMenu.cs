// This file is automatically generated by Kumquat.
// Do not modify this file - YOUR CHANGES WILL BE ERASED!

using Lime;

namespace Game.Scenes.Data;
public class MainMenu : MainMenu<Lime.Frame>
{
	public const string AssetPath = "Shell/MainMenu";

	public static readonly Lime.Frame FrameCache = (Lime.Frame)Node.Load(AssetPath);

	public MainMenu() : base(FrameCache.Clone<Node>()) { }

	public MainMenu(Node node) : base(node) { }

	public new MainMenu Clone()
	{
		return new MainMenu(It.Clone<Node>());
	}
}

public class MainMenu<T> : ParsedNode where T : Node
{
	public T It => (T)Node;


	public readonly TargetPoint<Lime.Frame> @_TargetPoint;
	public readonly DarkScreen<Lime.Frame> @_DarkScreen;
	public readonly PlayButton<Lime.Button> @_PlayButton;
	public readonly ExitButton<Lime.Button> @_ExitButton;
	public readonly CreditsButton<Lime.Button> @_CreditsButton;
	public readonly SettingsButton<Lime.Button> @_SettingsButton;

	public MainMenu() : this(MainMenu.FrameCache.Clone<Node>()) { }
	public MainMenu(Node node)
	{
		Node = node;
		@_TargetPoint = new TargetPoint<Lime.Frame>(Node.Find<Node>("@TargetPoint"));
		@_DarkScreen = new DarkScreen<Lime.Frame>(Node.Find<Node>("@DarkScreen"));
		@_PlayButton = new PlayButton<Lime.Button>(Node.Find<Node>("@PlayButton"));
		@_ExitButton = new ExitButton<Lime.Button>(Node.Find<Node>("@ExitButton"));
		@_CreditsButton = new CreditsButton<Lime.Button>(Node.Find<Node>("@CreditsButton"));
		@_SettingsButton = new SettingsButton<Lime.Button>(Node.Find<Node>("@SettingsButton"));
	}

	public MainMenu<T> Clone()
	{
		return new MainMenu<T>(It.Clone<Node>());
	}

	public T RunAnimationHide()
	{
		Node.RunAnimation("Hide");
		return (T)Node;
	}
	public T RunAnimationShow()
	{
		Node.RunAnimation("Show");
		return (T)Node;
	}
}
